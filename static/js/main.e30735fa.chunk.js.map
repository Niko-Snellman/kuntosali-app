{"version":3,"sources":["components/header/Header.js","api/Axios.js","components/diaryExerciseItem/DiaryExerciseItem.js","components/DiaryExerciseList.js","components/ProgramOptionItem.js","components/ProgramsDropdown.js","routes/NewDiary.js","routes/Diary.js","routes/Home.js","components/ExerciseDataItem.js","components/ExerciseDataList.js","routes/Statistics.js","components/ExerciseItem.js","components/ExerciseList.js","routes/NewProgram.js","components/programItem/ProgramItem.js","routes/ProgramsList.js","routes/Programs.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Header","axios","create","baseURL","DiaryExerciseItem","props","useState","checked","sets","reps","weights","diaryExercise","setDiaryExercise","exercise","sortData","exerciseData","sort","a","b","c","Date","completionDate","handleValueChange","e","temp","id","_id","target","value","updateDiaryExercises","ListGroupItem","Container","Row","Col","md","className","CustomInput","type","onChange","Label","for","name","Input","placeholder","length","repsPlaceholder","min","setsPlaceholder","weightsPlaceholder","DiaryExerciseList","exercises","ListGroup","map","key","ProgramOptionItem","program","DropdownItem","onClick","itemSelect","ProgramsDropdown","dropdownOpen","setDropdownOpen","handleSelect","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","programArray","p","NewDiary","currentDate","toISOString","substr","setProgramArray","page","setProgram","diaryExercises","setDiaryExercises","setCompletionDate","useEffect","get","then","result","console","log","data","catch","error","Form","onSubmit","event","preventDefault","selectedExercises","filter","forEach","selectedExercise","find","se","push","post","alert","FormGroup","defaultValue","required","exerArray","index","findIndex","Button","Diary","showList","setShowList","location","pathname","Home","ExerciseDataItem","repData","setData","weightData","dateTime","parse","x","y","React","useMemo","label","axes","primary","position","style","width","height","tooltip","ExerciseDataList","Statistics","selectedProgram","Axios","ExerciseItem","handleChange","saveValue","weight","ExerciseList","addExercise","NewProgram","setExercises","programName","setProgramName","programDesc","setProgramDesc","desc","res","ProgramItem","xs","Card","body","outline","CardTitle","CardText","color","delete","removeItem","ProgramsList","Programs","history","useHistory","newProgramPath","exact","path","component","App","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","to","strict","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e30735fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Kuntosali App</h1>\r\n      <p>Harjoitus työ</p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://kuntosali-app.herokuapp.com\",\r\n  //baseURL: \"http://localhost:3001\",\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport \"./DiaryExerciseItem.css\";\r\n\r\nconst DiaryExerciseItem = (props) => {\r\n  const diaryExerciseDefault = {\r\n    checked: false,\r\n    sets: \"\",\r\n    reps: \"\",\r\n    weights: \"\",\r\n  };\r\n  const [checked, setChecked] = useState(false);\r\n  const [reps, setReps] = useState(\"\");\r\n  const [sets, setSets] = useState(\"\");\r\n  const [weights, setWeights] = useState(\"\");\r\n  const [diaryExercise, setDiaryExercise] = useState(diaryExerciseDefault);\r\n  const exercise = props.exercise;\r\n\r\n  const sortData = (exerciseData) => {\r\n    return exerciseData.sort((a, b) => {\r\n      const c = new Date(a.completionDate);\r\n      const d = new Date(b.completionDate);\r\n      return d - c;\r\n    });\r\n  };\r\n\r\n  const setsPlaceholder = () => {\r\n    let placeholder = \"\";\r\n\r\n    const exerciseData = exercise.exerciseData;\r\n\r\n    if (exerciseData && exerciseData.length > 0) {\r\n      const sortedData = sortData(exerciseData);\r\n\r\n      const sets = sortedData[0].sets;\r\n\r\n      if (sets) {\r\n        placeholder = \"Sarjat (\" + sets + \")\";\r\n      } else if (exercise.sets) {\r\n        placeholder = \"Sarjat (\" + exercise.sets + \")\";\r\n      } else {\r\n        placeholder = \"Sarjat\";\r\n      }\r\n    } else if (exercise.sets) {\r\n      placeholder = \"Sarjat (\" + exercise.sets + \")\";\r\n    } else {\r\n      placeholder = \"Sarjat\";\r\n    }\r\n\r\n    return placeholder;\r\n  };\r\n\r\n  const repsPlaceholder = () => {\r\n    let placeholder = \"\";\r\n\r\n    const exerciseData = exercise.exerciseData;\r\n\r\n    if (exerciseData && exerciseData.length > 0) {\r\n      const sortedData = sortData(exerciseData);\r\n\r\n      const reps = sortedData[0].reps;\r\n\r\n      if (reps) {\r\n        placeholder = \"Toistot (\" + reps + \")\";\r\n      } else if (exercise.reps) {\r\n        placeholder = \"Toistot (\" + exercise.reps + \")\";\r\n      } else {\r\n        placeholder = \"Toistot\";\r\n      }\r\n    } else if (exercise.reps) {\r\n      placeholder = \"Toistot (\" + exercise.reps + \")\";\r\n    } else {\r\n      placeholder = \"Toistot\";\r\n    }\r\n\r\n    return placeholder;\r\n  };\r\n\r\n  const weightsPlaceholder = () => {\r\n    let placeholder = \"\";\r\n\r\n    const exerciseData = exercise.exerciseData;\r\n\r\n    if (exerciseData && exerciseData.length > 0) {\r\n      const sortedData = sortData(exerciseData);\r\n\r\n      const weights = sortedData[0].weights;\r\n\r\n      if (weights) {\r\n        placeholder = \"Painot (\" + weights + \" Kg)\";\r\n      } else if (exercise.weights) {\r\n        placeholder = \"Painot (\" + exercise.weights + \"Kg)\";\r\n      } else {\r\n        placeholder = \"Painot (Kg)\";\r\n      }\r\n    } else if (exercise.weights) {\r\n      placeholder = \"Painot (\" + exercise.weights + \" Kg)\";\r\n    } else {\r\n      placeholder = \"Painot (Kg)\";\r\n    }\r\n\r\n    return placeholder;\r\n  };\r\n\r\n  const handleValueChange = (e) => {\r\n    const temp = diaryExercise;\r\n    temp.id = exercise._id;\r\n\r\n    switch (e.target.id) {\r\n      case \"sets\":\r\n        temp.sets = e.target.value;\r\n        break;\r\n      case \"reps\":\r\n        temp.reps = e.target.value;\r\n        break;\r\n      case \"weight\":\r\n        temp.weights = e.target.value;\r\n        break;\r\n      case exercise._id:\r\n        temp.checked = e.target.checked;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setDiaryExercise(temp);\r\n\r\n    props.updateDiaryExercises(temp);\r\n  };\r\n\r\n  return (\r\n    <ListGroupItem>\r\n      <Container>\r\n        <Row>\r\n          <Col md={1} className=\"align-self-center mb-3\">\r\n            <CustomInput\r\n              type=\"checkbox\"\r\n              id={exercise._id}\r\n              onChange={handleValueChange}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <Label for=\"liikeName\">{exercise.name}</Label>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={4}>\r\n                <Input\r\n                  placeholder={repsPlaceholder()}\r\n                  type=\"number\"\r\n                  name=\"reps\"\r\n                  id=\"reps\"\r\n                  onChange={handleValueChange}\r\n                  min=\"0\"\r\n                />\r\n              </Col>\r\n              <Col md={4}>\r\n                <Input\r\n                  placeholder={setsPlaceholder()}\r\n                  type=\"number\"\r\n                  name=\"sets\"\r\n                  id=\"sets\"\r\n                  onChange={handleValueChange}\r\n                  min=\"0\"\r\n                />\r\n              </Col>\r\n              <Col md={4}>\r\n                <Input\r\n                  placeholder={weightsPlaceholder()}\r\n                  type=\"number\"\r\n                  name=\"weight\"\r\n                  id=\"weight\"\r\n                  onChange={handleValueChange}\r\n                  min=\"0\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </ListGroupItem>\r\n  );\r\n};\r\n\r\nexport default DiaryExerciseItem;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"reactstrap\";\r\nimport DiaryExerciseItem from \"./diaryExerciseItem/DiaryExerciseItem\";\r\n\r\nconst DiaryExerciseList = (props) => {\r\n  var exercises = props.exercises;\r\n\r\n  if (!exercises) {\r\n    exercises = [];\r\n  }\r\n\r\n  const updateDiaryExercises = (diaryExercise) => {\r\n    props.updateDiaryExercises(diaryExercise);\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {exercises.map((e) => (\r\n        <DiaryExerciseItem\r\n          key={e._id}\r\n          exercise={e}\r\n          updateDiaryExercises={updateDiaryExercises}\r\n        />\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default DiaryExerciseList;\r\n","import React from \"react\";\r\nimport { DropdownItem } from \"reactstrap\";\r\n\r\nconst ProgramOptionItem = (props) => {\r\n  const program = props.program;\r\n\r\n  const handleSelect = () => {\r\n    props.itemSelect(program);\r\n  };\r\n\r\n  return (\r\n    <DropdownItem onClick={handleSelect}>\r\n      <p>{program.name}</p>\r\n    </DropdownItem>\r\n  );\r\n};\r\n\r\nexport default ProgramOptionItem;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\nimport ProgramOptionItem from \"./ProgramOptionItem\";\r\n\r\nconst ProgramsDropdown = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const handleSelect = (program) => {\r\n    props.handleSelect(program);\r\n  };\r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle caret>Ohjelmat</DropdownToggle>\r\n      <DropdownMenu>\r\n        {props.programArray.map((p) => (\r\n          <ProgramOptionItem\r\n            program={p}\r\n            key={p._id}\r\n            itemSelect={handleSelect}\r\n          />\r\n        ))}\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ProgramsDropdown;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Button, Label, Input } from \"reactstrap\";\r\nimport axios from \"../api/Axios\";\r\nimport DiaryExerciseList from \"../components/DiaryExerciseList\";\r\nimport ProgramsDropdown from \"../components/ProgramsDropdown\";\r\n\r\nconst NewDiary = () => {\r\n  const currentDate = new Date().toISOString().substr(0, 10);\r\n  const [programArray, setProgramArray] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [program, setProgram] = useState({});\r\n  const [diaryExercises, setDiaryExercises] = useState([]);\r\n  const [completionDate, setCompletionDate] = useState(currentDate);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/programs/\")\r\n      .then((result) => {\r\n        console.log(result);\r\n        setProgramArray(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  const handleDateChange = (e) => {\r\n    setCompletionDate(e.target.value);\r\n  };\r\n\r\n  const saveDiary = (event) => {\r\n    event.preventDefault();\r\n    console.log(completionDate);\r\n    if (program.exercises) {\r\n      const selectedExercises = diaryExercises.filter((e) => e.checked);\r\n\r\n      if (selectedExercises && selectedExercises.length >= 1) {\r\n        program.exercises.forEach((e) => {\r\n          const selectedExercise = selectedExercises.find((se) => {\r\n            return se.id === e._id;\r\n          });\r\n          if (selectedExercise) {\r\n            selectedExercise.completionDate = completionDate;\r\n            delete selectedExercise.checked;\r\n            e.exerciseData.push(selectedExercise);\r\n          }\r\n        });\r\n\r\n        console.log(program);\r\n\r\n        axios\r\n          .post(\"/diary/\", program)\r\n          .then((result) => {\r\n            console.log(result);\r\n            alert(\"Päiväkirjamerkintä tallennettu!\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        alert(\"Valitse ainakin yksi liike\");\r\n      }\r\n    } else {\r\n      alert(\"Valitse ohjelma\");\r\n    }\r\n  };\r\n\r\n  const updateDiaryExercises = (diaryExercise) => {\r\n    const exerArray = diaryExercises;\r\n    const index = exerArray.findIndex((e) => e.id === diaryExercise.id);\r\n\r\n    if (index === -1) {\r\n      exerArray.push(diaryExercise);\r\n    } else {\r\n      exerArray[index] = diaryExercise;\r\n    }\r\n\r\n    setDiaryExercises(exerArray);\r\n  };\r\n\r\n  const handleSelect = (program) => {\r\n    console.log(program.exercises);\r\n    setProgram(program);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Lisää päiväkirjamerkintä</h3>\r\n      <Form onSubmit={saveDiary}>\r\n        <FormGroup className=\"border p-1\">\r\n          <Label for=\"diaryDate\">Päivämäärä</Label>\r\n          <Input\r\n            onChange={handleDateChange}\r\n            type=\"date\"\r\n            name=\"date\"\r\n            id=\"diaryDate\"\r\n            defaultValue={currentDate}\r\n            required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ProgramsDropdown\r\n            programArray={programArray}\r\n            handleSelect={handleSelect}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <DiaryExerciseList\r\n            exercises={program.exercises}\r\n            updateDiaryExercises={updateDiaryExercises}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Button>Tallenna</Button>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDiary;\r\n","import React, { useState } from \"react\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport NewDiary from \"./NewDiary\";\r\n\r\nconst Diary = (props) => {\r\n  const [showList, setShowList] = useState(false);\r\n  //const history = useHistory();\r\n  //const diaryPath = \"/paivakirja\";\r\n  const newDiaryPath = \"/kuntosali-app/paivakirja/uusi\";\r\n\r\n  /*const createNewClick = () => {\r\n    setShowList(!showList);\r\n    if (showList) {\r\n      history.push(diaryPath);\r\n    } else {\r\n      history.push(newDiaryPath);\r\n    }\r\n  };*/\r\n\r\n  /*const buttonText = () => {\r\n    if (!showList) {\r\n      return \"Luo uusi\";\r\n    } else {\r\n      return \"Peruuta\";\r\n    }\r\n  };*/\r\n\r\n  if (props.location.pathname === newDiaryPath && !showList) {\r\n    setShowList(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col className=\"mb-3\">\r\n            <h2>Päiväkirja</h2>\r\n          </Col>\r\n        </Row>\r\n        <NewDiary />\r\n        {/*<Route exact path={newDiaryPath} component={NewDiary} />\r\n        <Route exact path={diaryPath} component={DiaryList} />*/}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col className=\"mb-3\">\r\n            <h2>Sivun tarkoitus</h2>\r\n            <p>\r\n              Kuntosali App on sovellus, jonka avulla voi seurata omaa\r\n              kehittymistä kuntosalilla.\r\n            </p>\r\n            <p>Ohjelmat sivulla voi rakentaa oman kuntosaliohjelman.</p>\r\n            <p>\r\n              Tilastot sivulla voi tarkastella omaa edistymistä kuntosalilla.\r\n            </p>\r\n            <p>\r\n              Päiväkirja sivulla voi kirjata ylös kuntosalikerran jälkeen oman\r\n              suorituksen. Kun valitsee suoritettavan ohjelman, voi valita mitkä\r\n              liikkeet on suorittanut sinä päivänä ja liikkeille voi asettaa\r\n              toistot, sarjat ja painot.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Chart } from \"react-charts\";\r\n\r\nconst ExerciseDataItem = (props) => {\r\n  const exercise = props.exercise;\r\n  const exerciseData = exercise.exerciseData;\r\n\r\n  const repData = [];\r\n  const setData = [];\r\n  const weightData = [];\r\n\r\n  exerciseData.forEach((data) => {\r\n    const dateTime = Date.parse(data.completionDate);\r\n\r\n    repData.push({ x: dateTime, y: data.reps });\r\n    setData.push({ x: dateTime, y: data.sets });\r\n    weightData.push({ x: dateTime, y: data.weights });\r\n  });\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        label: \"Toistot\",\r\n        data: repData,\r\n      },\r\n      {\r\n        label: \"Sarjat\",\r\n        data: setData,\r\n      },\r\n      {\r\n        label: \"Painot\",\r\n        data: weightData,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, type: \"time\", position: \"bottom\" },\r\n      { type: \"linear\", position: \"left\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <p className=\"font-weight-bold\">{exercise.name}</p>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"200px\",\r\n        }}\r\n      >\r\n        <Chart data={data} axes={axes} tooltip />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseDataItem;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"reactstrap\";\r\nimport ExerciseDataItem from \"./ExerciseDataItem\";\r\n\r\nconst ExerciseDataList = (props) => {\r\n  let exercises = props.exercises;\r\n  console.log(exercises);\r\n\r\n  if (!exercises) {\r\n    exercises = [];\r\n  }\r\n\r\n  return (\r\n    <ListGroup>\r\n      {exercises.map((e) => (\r\n        <ExerciseDataItem key={e._id} exercise={e} />\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ExerciseDataList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport ProgramsDropdown from \"../components/ProgramsDropdown\";\r\nimport Axios from \"../api/Axios\";\r\nimport ExerciseDataList from \"../components/ExerciseDataList\";\r\n\r\nconst Statistics = () => {\r\n  const [selectedProgram, setProgram] = useState({});\r\n  const [page, setPage] = useState(1);\r\n  const [programArray, setProgramArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/programs/\")\r\n      .then((result) => {\r\n        console.log(result);\r\n        setProgramArray(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  const handleSelect = (program) => {\r\n    console.log(program);\r\n    setProgram(program);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col className=\"mb-3\">\r\n            <h2>Tilastot</h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ProgramsDropdown\r\n          programArray={programArray}\r\n          handleSelect={handleSelect}\r\n        />\r\n\r\n        <ExerciseDataList exercises={selectedProgram.exercises} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport { ListGroupItem, Row, Col, Label, Input } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ExerciseItem = (props) => {\r\n  const handleChange = (e) => {\r\n    props.saveValue(props.id, e.target.value, e.target.id);\r\n  };\r\n\r\n  return (\r\n    <ListGroupItem>\r\n      <Row>\r\n        <Col md={4} className=\"mb-1\">\r\n          <Label for=\"liikeName\">Liike</Label>\r\n          <Input\r\n            placeholder=\"Nimi\"\r\n            type=\"text\"\r\n            name=\"liike\"\r\n            id=\"liikeName\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Col>\r\n        <Col md={2} className=\"align-self-end mb-1\">\r\n          <Input\r\n            placeholder=\"Toistot\"\r\n            type=\"number\"\r\n            name=\"reps\"\r\n            id=\"reps\"\r\n            value={props.reps}\r\n            onChange={handleChange}\r\n          />\r\n        </Col>\r\n        <Col md={2} className=\"align-self-end mb-1\">\r\n          <Input\r\n            placeholder=\"Sarjat\"\r\n            type=\"number\"\r\n            name=\"sets\"\r\n            id=\"sets\"\r\n            value={props.sets}\r\n            onChange={handleChange}\r\n          />\r\n        </Col>\r\n        <Col md={2} className=\"align-self-end mb-1\">\r\n          <Input\r\n            placeholder=\"Painot(Kg)\"\r\n            type=\"number\"\r\n            name=\"weights\"\r\n            id=\"weights\"\r\n            value={props.weight}\r\n            onChange={handleChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  );\r\n};\r\n\r\nExerciseItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  reps: PropTypes.number,\r\n  sets: PropTypes.number,\r\n  weight: PropTypes.number,\r\n};\r\n\r\nexport default ExerciseItem;\r\n","import React from \"react\";\r\nimport { ListGroup, Button, ListGroupItem } from \"reactstrap\";\r\nimport ExerciseItem from \"./ExerciseItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ExerciseList = (props) => {\r\n  const saveValue = (index, value, id) => {\r\n    props.saveValue(index, value, id);\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {props.exercises.map((exercise, index) => (\r\n        <ExerciseItem\r\n          key={index}\r\n          id={index}\r\n          name={exercise.name}\r\n          saveValue={saveValue}\r\n        ></ExerciseItem>\r\n      ))}\r\n      <ListGroupItem>\r\n        <Button onClick={props.addExercise}>Lisää liike</Button>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nExerciseList.propTypes = {\r\n  exercises: PropTypes.array.isRequired,\r\n  addExercise: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ExerciseList;\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport ExerciseList from \"../components/ExerciseList\";\r\nimport axios from \"../api/Axios\";\r\n\r\nconst NewProgram = () => {\r\n  const exercisesArray = [\r\n    {\r\n      name: \"\",\r\n    },\r\n  ];\r\n\r\n  const [exercises, setExercises] = useState(exercisesArray);\r\n  const [programName, setProgramName] = useState(\"\");\r\n  const [programDesc, setProgramDesc] = useState(\"\");\r\n\r\n  const addExercise = () => {\r\n    setExercises([...exercises, { name: \"\" }]);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setProgramName(event.target.value);\r\n  };\r\n\r\n  const handleProgramDescChange = (event) => {\r\n    setProgramDesc(event.target.value);\r\n  };\r\n\r\n  const saveProgram = (e) => {\r\n    e.preventDefault();\r\n\r\n    let program = {\r\n      name: programName,\r\n      desc: programDesc,\r\n      exercises: exercises,\r\n    };\r\n\r\n    console.log(\"ohjelma : \", program);\r\n\r\n    axios\r\n      .post(\"/programs\", program)\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert(\"Ohjelema lisätty\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"Ongelma ohjelman lisäyksessä\");\r\n      });\r\n  };\r\n\r\n  const saveValue = (index, value, id) => {\r\n    var exerArray = exercises;\r\n    switch (id) {\r\n      case \"liikeName\":\r\n        exerArray[index].name = value;\r\n        break;\r\n      case \"reps\":\r\n        exerArray[index].reps = value;\r\n        break;\r\n      case \"sets\":\r\n        exerArray[index].sets = value;\r\n        break;\r\n      case \"weights\":\r\n        exerArray[index].weights = value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    exerArray[index].exerciseData = [];\r\n    setExercises(exerArray);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Uusi ohjelma</h3>\r\n      <Form onSubmit={saveProgram}>\r\n        <FormGroup className=\"border p-1\">\r\n          <Label for=\"programName\">Nimi</Label>\r\n          <Input\r\n            onChange={handleNameChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"programName\"\r\n            required\r\n          />\r\n\r\n          <Label for=\"programDesc\">Kuvaus</Label>\r\n          <Input\r\n            onChange={handleProgramDescChange}\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            id=\"programDesc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup className=\"border p-1\">\r\n          <ExerciseList\r\n            addExercise={addExercise}\r\n            exercises={exercises}\r\n            saveValue={saveValue}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Button>Tallenna</Button>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProgram;\r\n","import React from \"react\";\r\nimport { Col, Card, CardTitle, CardText, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ProgramItem.css\";\r\nimport axios from \"../../api/Axios\";\r\n\r\nconst ProgramItem = (props) => {\r\n  const handleClick = () => {\r\n    axios\r\n      .delete(\"/programs/\", { data: { id: props.id } })\r\n      .then((result) => {\r\n        console.log(result);\r\n        alert(\"Ohjelma poistettu!\");\r\n\r\n        props.removeItem(props.id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"Ohjelman poistaminen epäonnistui!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Col xs=\"auto\" className=\"mb-3\">\r\n      <Card body outline style={{ width: \"18rem\" }}>\r\n        <CardTitle className=\"font-weight-bold\">{props.name}</CardTitle>\r\n        <CardText>{props.desc}</CardText>\r\n        <Button className=\"delete\" color=\"danger\" onClick={handleClick}>\r\n          X\r\n        </Button>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProgramItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  desc: PropTypes.string,\r\n};\r\n\r\nexport default ProgramItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport ProgramItem from \"../components/programItem/ProgramItem\";\r\nimport axios from \"../api/Axios\";\r\n\r\nconst ProgramsList = () => {\r\n  const [programArray, setProgramArray] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/programs/\")\r\n      .then((result) => {\r\n        console.log(result);\r\n        setProgramArray(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  const removeItem = (id) => {\r\n    const programs = programArray;\r\n\r\n    setProgramArray(programs.filter((p) => p._id !== id));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {programArray.map((p) => (\r\n        <ProgramItem\r\n          key={p._id}\r\n          name={p.name}\r\n          desc={p.desc}\r\n          id={p._id}\r\n          removeItem={removeItem}\r\n        />\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProgramsList;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport NewProgram from \"./NewProgram\";\r\nimport ProgramsList from \"./ProgramsList\";\r\n\r\nconst Programs = (props) => {\r\n  const [showList, setShowList] = useState(false);\r\n  const history = useHistory();\r\n  const programsPath = \"/kuntosali-app/ohjelmat\";\r\n  const newProgramPath = \"/kuntosali-app/ohjelmat/uusi\";\r\n\r\n  const createNewClick = () => {\r\n    setShowList(!showList);\r\n    if (showList) {\r\n      history.push(programsPath);\r\n    } else {\r\n      history.push(newProgramPath);\r\n    }\r\n  };\r\n\r\n  const buttonText = () => {\r\n    if (!showList) {\r\n      return \"Luo uusi\";\r\n    } else {\r\n      return \"Peruuta\";\r\n    }\r\n  };\r\n\r\n  if (props.location.pathname === newProgramPath && !showList) {\r\n    setShowList(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col className=\"mb-3\">\r\n            <h2>Ohjelmat</h2>\r\n\r\n            <Button onClick={createNewClick}>{buttonText()}</Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Route exact path={newProgramPath} component={NewProgram} />\r\n        <Route exact path={programsPath} component={ProgramsList} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Programs;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"../header/Header\";\r\nimport { Route, NavLink, BrowserRouter } from \"react-router-dom\";\r\nimport Diary from \"../../routes/Diary\";\r\nimport Home from \"../../routes/Home\";\r\nimport Statistics from \"../../routes/Statistics\";\r\nimport Programs from \"../../routes/Programs\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <BrowserRouter>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/kuntosali-app\">kuntosali app</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/kuntosali-app/ohjelmat\">\r\n                  Ohjelmat\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/kuntosali-app/paivakirja\">\r\n                  Päiväkirja\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/kuntosali-app/tilastot\">\r\n                  Tilastot\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <Route path=\"/kuntosali-app\" exact strict component={Home}></Route>\r\n        <Route path=\"/kuntosali-app/ohjelmat\" component={Programs}></Route>\r\n        <Route path=\"/kuntosali-app/tilastot\" component={Statistics}></Route>\r\n        <Route path=\"/kuntosali-app/paivakirja\" component={Diary}></Route>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}